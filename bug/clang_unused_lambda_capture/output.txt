[ non-auto storage: fails ]
test.cc

   #include <iostream>
   const char top_doc[] = "Works";
   int main() {
     auto& doc = top_doc;
     [&doc]() { std::cout << doc << std::endl; }();
     return 0;
   }

+ clang++-6.0 -std=c++14 -Wall -Werror ./test.cc -o ./test
./test.cc:5:5: error: lambda capture 'doc' is not required to be captured for this use [-Werror,-Wunused-lambda-capture]
  [&doc]() { std::cout << doc << std::endl; }();
    ^
1 error generated.
+ g++-5 -std=c++14 -Wall -Werror ./test.cc -o ./test
+ ./test
Works


[ auto storage: works ]
test.cc

   #include <iostream>
   int main() {
     const char top_doc[] = "Works";
     auto& doc = top_doc;
     [&doc]() { std::cout << doc << std::endl; }();
     return 0;
   }

+ clang++-6.0 -std=c++14 -Wall -Werror ./test.cc -o ./test
+ ./test
Works
+ g++-5 -std=c++14 -Wall -Werror ./test.cc -o ./test
+ ./test
Works


[ auto&: fails ]
test.cc

   #include <iostream>
   constexpr char top_doc[] = "Works";
   int main() {
     auto& doc = top_doc;
     [&doc]() { std::cout << doc << std::endl; }();
     return 0;
   }

+ clang++-6.0 -std=c++14 -Wall -Werror ./test.cc -o ./test
./test.cc:5:5: error: lambda capture 'doc' is not required to be captured for this use [-Werror,-Wunused-lambda-capture]
  [&doc]() { std::cout << doc << std::endl; }();
    ^
1 error generated.
+ g++-5 -std=c++14 -Wall -Werror ./test.cc -o ./test
+ ./test
Works


[ constexpr auto&: works ]
test.cc

   #include <iostream>
   constexpr char top_doc[] = "Works";
   int main() {
     constexpr auto& doc = top_doc;
     []() { std::cout << doc << std::endl; }();
     return 0;
   }

+ clang++-6.0 -std=c++14 -Wall -Werror ./test.cc -o ./test
+ ./test
Works
+ g++-5 -std=c++14 -Wall -Werror ./test.cc -o ./test
+ ./test
Works


