$ ./repro.sh 
+ target=:conservative_resize_issue
+ echo '[ Good ]'
[ Good ]
+ bazel_run :conservative_resize_issue
+ bazel run -c dbg '--run_under=valgrind --tool=memcheck' :conservative_resize_issue
INFO: Found 1 target...
Target //bug/eigen_resize_dtor:conservative_resize_issue up-to-date:
  bazel-bin/bug/eigen_resize_dtor/conservative_resize_issue
INFO: Elapsed time: 1.901s, Critical Path: 1.63s

INFO: Running command line: /bin/bash -c 'valgrind --tool=memcheck bazel-bin/bug/eigen_resize_dtor/conservative_resize_issue '
==29021== Memcheck, a memory error detector
==29021== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29021== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==29021== Command: /home/eacousineau/.cache/bazel/_bazel_eacousineau/4bfeaeef7a21f92da79b50fef77b3ca6/execroot/repro/bazel-out/clang-3.9-linux-dbg/bin/bug/eigen_resize_dtor/conservative_resize_issue
==29021== 
==29021== 
==29021== HEAP SUMMARY:
==29021==     in use at exit: 72,704 bytes in 1 blocks
==29021==   total heap usage: 8 allocs, 7 frees, 72,856 bytes allocated
==29021== 
==29021== LEAK SUMMARY:
==29021==    definitely lost: 0 bytes in 0 blocks
==29021==    indirectly lost: 0 bytes in 0 blocks
==29021==      possibly lost: 0 bytes in 0 blocks
==29021==    still reachable: 72,704 bytes in 1 blocks
==29021==         suppressed: 0 bytes in 0 blocks
==29021== Rerun with --leak-check=full to see details of leaked memory
==29021== 
==29021== For counts of detected and suppressed errors, rerun with: -v
==29021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
+ echo -e '\n\n\n'




+ echo '[ Bad ]'
[ Bad ]
+ bazel_run --copt=-DUSE_BAD :conservative_resize_issue
+ bazel run -c dbg '--run_under=valgrind --tool=memcheck' --copt=-DUSE_BAD :conservative_resize_issue
INFO: Found 1 target...
Target //bug/eigen_resize_dtor:conservative_resize_issue up-to-date:
  bazel-bin/bug/eigen_resize_dtor/conservative_resize_issue
INFO: Elapsed time: 1.882s, Critical Path: 1.51s

INFO: Running command line: /bin/bash -c 'valgrind --tool=memcheck bazel-bin/bug/eigen_resize_dtor/conservative_resize_issue '
==29652== Memcheck, a memory error detector
==29652== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29652== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==29652== Command: /home/eacousineau/.cache/bazel/_bazel_eacousineau/4bfeaeef7a21f92da79b50fef77b3ca6/execroot/repro/bazel-out/clang-3.9-linux-dbg/bin/bug/eigen_resize_dtor/conservative_resize_issue
==29652== 
==29652== 
==29652== HEAP SUMMARY:
==29652==     in use at exit: 72,704 bytes in 1 blocks
==29652==   total heap usage: 6 allocs, 5 frees, 72,832 bytes allocated
==29652== 
==29652== LEAK SUMMARY:
==29652==    definitely lost: 0 bytes in 0 blocks
==29652==    indirectly lost: 0 bytes in 0 blocks
==29652==      possibly lost: 0 bytes in 0 blocks
==29652==    still reachable: 72,704 bytes in 1 blocks
==29652==         suppressed: 0 bytes in 0 blocks
==29652== Rerun with --leak-check=full to see details of leaked memory
==29652== 
==29652== For counts of detected and suppressed errors, rerun with: -v
==29652== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
