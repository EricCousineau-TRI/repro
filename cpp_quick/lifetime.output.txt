
--- Standard ---

>>> Lifetime<1> obj1{}; Lifetime<2> obj2{};
1: ctor ()
2: ctor ()

>>> scope { Lifetime<1>(); Lifetime<2>() ; }
1: ctor ()
1: dtor
2: ctor ()
2: dtor
   <<< [ exiting scope ]

>>> scope { Lifetime<1> tmp1{}; Lifetime<2> tmp2{} ; }
1: ctor ()
2: ctor ()
   <<< [ exiting scope ]
2: dtor
1: dtor

>>> scope { Lifetime<2> copy = obj2 ; }
2: copy ctor (const lvalue)
   <<< [ exiting scope ]
2: dtor

>>> scope { Lifetime<2> copy = obj1 ; }
2: ctor (const Lifetime<1>&)
   <<< [ exiting scope ]
2: dtor

>>> scope { Lifetime<2> copy = Lifetime<1>() ; }
1: ctor ()
2: ctor (Lifetime<1>&&)
1: dtor <-- was moved
   <<< [ exiting scope ]
2: dtor


--- In: const T& ---

>>> func_in_const_lvalue(Lifetime<3>());
3: ctor ()
func_in_const_lvalue
3: dtor


--- Out: T ---

>>> func_out_value();
func_out_value
4: ctor ()
4: dtor

>>> func_in_const_lvalue(func_out_value());
func_out_value
4: ctor ()
3: ctor (Lifetime<4>&&)
func_in_const_lvalue
3: dtor
4: dtor <-- was moved

>>> scope { const Lifetime<4>& ref = func_out_value() ; }
func_out_value
4: ctor ()
   <<< [ exiting scope ]
4: dtor

>>> scope { Lifetime<4>&& ref = func_out_value() ; }
func_out_value
4: ctor ()
   <<< [ exiting scope ]
4: dtor

>>> scope { const Lifetime<4>& ref = func_thru_const_lvalue(func_out_value()) ; }
func_out_value
4: ctor ()
func_thru_const_lvalue
4: dtor
   <<< [ exiting scope ]

  ^ loses lifetime

--- Out: const T& ---

>>> func_out_const_lvalue();
4: ctor ()
4: dtor

>>> scope { const Lifetime<4>& ref = func_out_const_lvalue() ; }
4: ctor ()
4: dtor
   <<< [ exiting scope ]


--- Out: T&& ---

>>> func_out_rvalue();
4: ctor ()
4: dtor

>>> scope { Lifetime<4>&& ref = func_out_rvalue() ; }
4: ctor ()
4: dtor
   <<< [ exiting scope ]

>>> scope { func_in_const_lvalue(func_out_rvalue()) ; }
4: ctor ()
4: dtor
3: ctor (Lifetime<4>&&)
func_in_const_lvalue
3: dtor
   <<< [ exiting scope ]

  ^ undefined behavior, was warned

--- Thru: const T& ---

>>> func_thru_const_lvalue(Lifetime<3>());
3: ctor ()
4: ctor (Lifetime<3>&&)
func_thru_const_lvalue
4: dtor
3: dtor <-- was moved

>>> scope { const auto& ref = func_thru_const_lvalue(Lifetime<3>()) ; }
3: ctor ()
4: ctor (Lifetime<3>&&)
func_thru_const_lvalue
4: dtor
3: dtor <-- was moved
   <<< [ exiting scope ]

2: dtor
1: dtor
