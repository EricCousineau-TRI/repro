load(
    ":defs.bzl",
    "extract_cc_object_files",
    "cc_shared_library",
)

# Experiment 1

cc_library(
    name = "ex1_lib",
    srcs = ["ex1_lib.cc"],
)

extract_cc_object_files(
    name = "ex1_lib_object_files",
    deps = [":ex1_lib"],
)

filegroup(
    name = "ex1_data",
    # just so we trigger build of original.
    srcs = [":ex1_lib"],
)

cc_library(
    name = "ex1_lib_again_via_recompile",
    srcs = ["ex1_lib.cc"],
    data = [":ex1_data"],
)

cc_binary(
    name = "ex1_main_via_recompile",
    deps = [":ex1_lib_again_via_recompile"],
    srcs = ["ex1_main.cc"],
)

cc_library(
    name = "ex1_lib_again_via_object_files",
    srcs = [":ex1_lib_object_files"],
    data = [":ex1_data"],
)

cc_binary(
    name = "ex1_main_via_object_files",
    deps = [":ex1_lib_again_via_object_files"],
    srcs = ["ex1_main.cc"],
)

# Experiment 2

cc_library(
    name = "ex2_a",
    srcs = ["ex2_a.cc"],
)

cc_shared_library(
    name = "ex2_a_shared",
    srcs = ["ex2_a.cc"],
)

cc_library(
    name = "ex2_b",
    srcs = ["ex2_b.cc"],
    deps = [":ex2_a"],
    # to ensure we can dlopen even with indirect usage.
    alwayslink = True,
)

cc_library(
    name = "ex2_c",
    srcs = ["ex2_c.cc"],
    deps = [":ex2_a"],
    # to ensure we can dlopen even with indirect usage.
    alwayslink = True,
)

#  - Case 1: ODR Violation. B and C link against static A.
# dlopen shows that they have separate memory.
cc_shared_library(
    name = "ex2_b_bad",
    deps = [":ex2_b"],
)

cc_shared_library(
    name = "ex2_c_bad",
    deps = ["ex2_c"],
)

# - Case 2: Extract subset of object files. Motivate effective diamond, but
# define extraction s.t. we can replace it w/ shared object for each library.

extract_cc_object_files(
    name = "ex2_b_object_files",
    deps = [":ex2_b"],
)

cc_shared_library(
    name = "ex2_b_good",
    srcs = ["ex2_b_object_files"],
    deps = [":ex2_a_shared"],
    # transitive = True,  # Causes failure.
)

extract_cc_object_files(
    name = "ex2_c_object_files",
    deps = [":ex2_c"],
)

cc_shared_library(
    name = "ex2_c_good",
    srcs = ["ex2_c_object_files"],
    deps = [":ex2_a_shared"],
)

# - Test fixture.

cc_library(
    name = "ex2_load_symbol",
    deps = ["@bazel_tools//tools/cpp/runfiles"],
    srcs = ["ex2_load_symbol.cc"],
    hdrs = ["ex2_load_symbol.h"],
    linkopts = ["-ldl"],
)

cc_binary(
    name = "ex2_main",
    srcs = ["ex2_main.cc"],
    deps = [":ex2_load_symbol"],
    data = [
        ":ex2_b_bad",
        ":ex2_c_bad",
        ":ex2_b_good",
        ":ex2_c_good",
    ],
)
